@startuml super 状态图
' 基础设置
skin rose

' 状态定义
state Idle: Super 正常运行状态
state WaitNewProcess: 等待至少一组新版本进程接入
state NotifyState: 通知OldScene、OldGateway\n即将进入不停服更新状态
state TransRecordData: 转移 OldRecord 数据\n到 NewRecord
state RecordSwitch: OldScene、OldGateway\n切换连接到NewRecord
state RecycleRecord: 回收OldRecord
state choice <<choice>>
state SmokeTest: QA 冒烟测试阶段，全服新旧切换前\n用来给 QA 同学进行测试
state Coexist: 新老进程共存阶段，\n此时会侦测玩家在线情况，\n如下几种情况会导致状态转换:\n1.全部老玩家下线\n2.运维指令\n3.到了设定时间
state Recycle: 资源回收阶段


' 状态流转
'[*] --> Idle
Idle --> WaitNewProcess: 运维发起信号 40，\n开始等待新进程开启

WaitNewProcess-->NotifyState: 一组新进程就绪，\n通知OldScene、OldGateway

NotifyState --> TransRecordData: 通知 OldRecord 开始转移数据

TransRecordData --> RecordSwitch: 数据转移成功，开始让\nOldScene、OldGateway 切换

RecordSwitch --> RecycleRecord: Record切换成功，\n开始回收OldRecord

RecycleRecord --> choice: 完成切换工作，进行下一步前\n先判断当前是否是冒烟服
choice --> SmokeTest: 是冒烟服


choice --> Coexist: 不是冒烟服

SmokeTest -> Coexist: 冒烟结束，\n运维发送停止冒烟指令

Coexist --> Recycle: 满足切换条件，\n将残余玩家踢下线\n并且关停老进程

Recycle -up-> Idle: 回归正常状态

@enduml
